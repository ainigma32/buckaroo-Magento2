name: M2 Coding Standard

on:
  push:
  pull_request:

jobs:
  phpcs:
    name: M2 Code Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: extdn/github-actions-m2/magento-coding-standard/8.1@master
        with:
          phpcs_severity: 10
          phpcs_report: full

  phpmd:
    name: M2 Mess Detection
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: extdn/github-actions-m2/magento-mess-detector@master

  phpstan:
    name: M2 PHPStan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      # ───────────────────────────────────────────────────────────────
      # PHP & Composer
      # ───────────────────────────────────────────────────────────────
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - uses: actions/checkout@v3

      - name: Validate composer.json
        run: composer validate

      - name: Clear Composer cache
        run: composer clear-cache

      # ───────────────────────────────────────────────────────────────
      # Magento test installation
      # ───────────────────────────────────────────────────────────────
      - name: Setup Magento
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1
        run: |
          # Pull‑request number
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          url="https://api.github.com/repos/buckaroo-it/Magento2/pulls/${pull_number}/files"
          echo "Fetching file list: $url"

          # Save only files still present in the checkout
          curl -s "$url" \
            | jq -r '.[] | select(.status != "removed") | .filename' \
            | tee files_changed

          # Optionally show them (‑r = no run if list is empty)
          cat files_changed | xargs -r ls -la

          # Magento auth.json
          echo '{"http-basic": {"repo.magento.com": {"username": "${{ secrets.REPO_USERNAME }}","password": "${{ secrets.REPO_PASS }}"}}}' > auth.json

          # Create clean Magento 2.4.8 project
          composer create-project --repository-url=https://repo.magento.com/ \
            magento/project-community-edition=2.4.8 ~/m248

          # Copy module under test into the fresh install
          mkdir -p ~/m248/app/code/Buckaroo/Magento2/
          rsync -r --exclude='m248' ./ ~/m248/app/code/Buckaroo/Magento2/

          cd ~/m248
          bin/magento module:enable --all
          bin/magento setup:di:compile

      # ───────────────────────────────────────────────────────────────
      # Static‑analysis tooling
      # ───────────────────────────────────────────────────────────────
      - name: Install PHPStan
        run: |
          cd ~/m248
          composer require --dev phpstan/phpstan:^1.10
          ls -la vendor/bin/

      - name: Install Buckaroo SDK
        run: |
          cd ~/m248
          composer require buckaroo/sdk

      - name: Run PHPStan
        run: |
          cd ~/m248
          vendor/bin/phpstan analyse \
            --level 1 \
            app/code/Buckaroo/Magento2/ \
            -c dev/tests/static/testsuite/Magento/Test/Php/_files/phpstan/phpstan.neon
